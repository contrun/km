digraph Mir_0_11 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn main::{closure#0}(_1: std::pin::Pin&lt;&amp;mut [static generator@src/main.rs:4:17: 6:2]&gt;, _2: std::future::ResumeTy) -&gt; std::ops::GeneratorState&lt;(), ()&gt;<br align="left"/>let mut _3: tokio::time::Sleep;<br align="left"/>let mut _4: tokio::time::Sleep;<br align="left"/>let mut _5: std::time::Duration;<br align="left"/>let mut _6: std::task::Poll&lt;()&gt;;<br align="left"/>let mut _7: std::pin::Pin&lt;&amp;mut tokio::time::Sleep&gt;;<br align="left"/>let mut _8: &amp;mut tokio::time::Sleep;<br align="left"/>let mut _9: &amp;mut tokio::time::Sleep;<br align="left"/>let mut _10: &amp;mut std::task::Context;<br align="left"/>let mut _11: &amp;mut std::task::Context;<br align="left"/>let mut _12: std::future::ResumeTy;<br align="left"/>let mut _13: isize;<br align="left"/>let _14: ();<br align="left"/>let mut _15: std::future::ResumeTy;<br align="left"/>let mut _16: ();<br align="left"/>let mut _17: ();<br align="left"/>let mut _18: std::future::ResumeTy;<br align="left"/>let mut _19: u32;<br align="left"/>debug _task_context =&gt; _18;<br align="left"/>debug pinned =&gt; (((*(_1.0: &amp;mut [static generator@src/main.rs:4:17: 6:2])) as variant#3).0: tokio::time::Sleep);<br align="left"/>debug result =&gt; _14;<br align="left"/>>;
    bb0__0_11 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_19 = discriminant((*(_1.0: &amp;mut [static generator@src/main.rs:4:17: 6:2])))<br/></td></tr><tr><td align="left">switchInt(move _19)</td></tr></table>>];
    bb1__0_11 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">_18 = move _2<br/></td></tr><tr><td align="left">_5 = Duration::from_secs(const 1_u64)</td></tr></table>>];
    bb2__0_11 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left">_4 = tokio::time::sleep(move _5)</td></tr></table>>];
    bb3__0_11 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left">_3 = &lt;Sleep as IntoFuture&gt;::into_future(move _4)</td></tr></table>>];
    bb4__0_11 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">(((*(_1.0: &amp;mut [static generator@src/main.rs:4:17: 6:2])) as variant#3).0: tokio::time::Sleep) = move _3<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb5__0_11 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">_9 = &amp;mut (((*(_1.0: &amp;mut [static generator@src/main.rs:4:17: 6:2])) as variant#3).0: tokio::time::Sleep)<br/>_8 = &amp;mut (*_9)<br/></td></tr><tr><td align="left">_7 = Pin::&lt;&amp;mut Sleep&gt;::new_unchecked(move _8)</td></tr></table>>];
    bb6__0_11 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">_12 = _18<br/></td></tr><tr><td align="left">_11 = get_context(move _12)</td></tr></table>>];
    bb7__0_11 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">_10 = &amp;mut (*_11)<br/></td></tr><tr><td align="left">_6 = &lt;Sleep as Future&gt;::poll(move _7, move _10)</td></tr></table>>];
    bb8__0_11 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">_13 = discriminant(_6)<br/></td></tr><tr><td align="left">switchInt(move _13)</td></tr></table>>];
    bb9__0_11 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">((_0 as Yielded).0: ()) = move _16<br/>discriminant(_0) = 0<br/>discriminant((*(_1.0: &amp;mut [static generator@src/main.rs:4:17: 6:2]))) = 3<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb10__0_11 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb11__0_11 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">_14 = ((_6 as Ready).0: ())<br/></td></tr><tr><td align="left">drop((((*(_1.0: &amp;mut [static generator@src/main.rs:4:17: 6:2])) as variant#3).0: tokio::time::Sleep))</td></tr></table>>];
    bb12__0_11 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">_17 = const ()<br/>((_0 as Complete).0: ()) = move _17<br/>discriminant(_0) = 1<br/>discriminant((*(_1.0: &amp;mut [static generator@src/main.rs:4:17: 6:2]))) = 1<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb13__0_11 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">13 (cleanup)</td></tr><tr><td align="left">drop((((*(_1.0: &amp;mut [static generator@src/main.rs:4:17: 6:2])) as variant#3).0: tokio::time::Sleep))</td></tr></table>>];
    bb14__0_11 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">14 (cleanup)</td></tr><tr><td align="left" balign="left">discriminant((*(_1.0: &amp;mut [static generator@src/main.rs:4:17: 6:2]))) = 2<br/></td></tr><tr><td align="left">resume</td></tr></table>>];
    bb15__0_11 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">_15 = move _2<br/>_18 = move _15<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_11 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left">assert(const false, &quot;`async fn` resumed after panicking&quot;)</td></tr></table>>];
    bb17__0_11 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left">assert(const false, &quot;`async fn` resumed after completion&quot;)</td></tr></table>>];
    bb18__0_11 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb0__0_11 -> bb1__0_11 [label="0_u32"];
    bb0__0_11 -> bb17__0_11 [label="1_u32"];
    bb0__0_11 -> bb16__0_11 [label="2_u32"];
    bb0__0_11 -> bb15__0_11 [label="3_u32"];
    bb0__0_11 -> bb18__0_11 [label="otherwise"];
    bb1__0_11 -> bb2__0_11 [label="return"];
    bb1__0_11 -> bb14__0_11 [label="unwind"];
    bb2__0_11 -> bb3__0_11 [label="return"];
    bb2__0_11 -> bb14__0_11 [label="unwind"];
    bb3__0_11 -> bb4__0_11 [label="return"];
    bb3__0_11 -> bb14__0_11 [label="unwind"];
    bb4__0_11 -> bb5__0_11 [label=""];
    bb5__0_11 -> bb6__0_11 [label="return"];
    bb5__0_11 -> bb13__0_11 [label="unwind"];
    bb6__0_11 -> bb7__0_11 [label="return"];
    bb6__0_11 -> bb13__0_11 [label="unwind"];
    bb7__0_11 -> bb8__0_11 [label="return"];
    bb7__0_11 -> bb13__0_11 [label="unwind"];
    bb8__0_11 -> bb11__0_11 [label="0_isize"];
    bb8__0_11 -> bb9__0_11 [label="1_isize"];
    bb8__0_11 -> bb10__0_11 [label="otherwise"];
    bb11__0_11 -> bb12__0_11 [label="return"];
    bb11__0_11 -> bb14__0_11 [label="unwind"];
    bb13__0_11 -> bb14__0_11 [label="return"];
    bb15__0_11 -> bb5__0_11 [label=""];
    bb16__0_11 -> bb16__0_11 [label=""];
    bb17__0_11 -> bb17__0_11 [label=""];
}
